<!doctype html>
  <head>
    <script type="text/javascript" src="js/raphael.js"></script>
    <meta charset="UTF-8">
    <title>Puntaje</title>
  </head>
<link rel="stylesheet" href="/lib/bootstrap/bootstrap.min.css" />
<body>
<style>


h1 {
  font-family: 'Helvetica',sans-serif;
  font-size: 36px;
  line-height: 70px;
  text-align: center;
 }

h3 {
  font-family: 'Helvetica',sans-serif;
  font-size: 16px;
  text-align: left;
  background-color: #f5f5f5;
  padding: 15px 32px;
  box-shadow: 2px 2px 2px #DCDCDC;
}

  #container{
      width: 1300px;
      height: 300px;
      margin: 0 auto;
      padding-top: 20px;
      padding-bottom: 50px;
}


.column {
  float: left;
  padding: 10px;
}

.left, .right {
  width: 25%;
}

.middle {
  width: 40%;
}


div.checks {
    position: relative;
    margin-left: auto;
    margin-right: auto;

}

div.checks img{
    width: 20px;
    height: 20px;

    /*margin-left: auto;
    margin-right: auto;*/
}

.button1{
    background-color: #e7e7e7;
    color: black;
    border: none;
    padding: 15px 32px;
    text-align: center;
    text-decoration: none;
    display: inline-block;
    font-size: 16px;
}

</style>

    <h1>Puntaje total en las rondas</h1>
    <div class="column left" style="padding-top: 200px">
    </div>

    <div class="column middle" style="padding-left: 0px; padding-top: 150px;">
        <div id="puntAcum">
            <h3> La asistencia al ha sido así:</h3>
            <!-- La asistencia al ha sido así:  -->
            <span id="canvas_container2"></span>
        </div>
        <br><br><br>
        <div id="puntAcum">
            <h3> Su desempeño total ha sido así:</h3>
            <!-- Su desempeño total ha sido así: -->
            <span id="canvas_container1"></span>
        </div>
    </div>


    <div class="column right" style="padding-top: 600px">
        <div id = "confirmar" align="right" style="padding-top: 0px;">
            <button class="button1" id='continuar'>Continuar</button>
        </div>
    </div>
  </div>


</body>

  <script type="text/javascript">
    window.onload = function() {

        if ('undefined' !== typeof window.paper) return;
        var node = parent.node;
        var me = node.player.id; // My id.

        // Create the square for the locations and score using RAPHAEL.JS
        // console.log('Raphael intenta crear paper1...');
        var paper1 = new Raphael(document.getElementById('canvas_container1'), 500, 140);
        var p = new Raphael(document.getElementById('canvas_container2'), 500, 140);

        // ---------------------------------- GRAFICA DE ASISTENCIA -------------------------------------------- //
        window.drawAsistencia = function(msg) {
          console.log("Si entra")
          p.clear();
          console.log("Mensaje",msg)
          // Converting message to JSON in order to be able to use it as dictionary
          var asistencias = JSON.parse(msg);
          console.log("Asistencias",asistencias)
          rounds = asistencias[Object.keys(asistencias)[0]].length;
          titles_x = 50
          titles_y = 50

          Size_rect = 30;

          // Title Jugadores
          p.text(titles_x,titles_y-30, "Jugadores").attr({"font-size": "12px","font-weight": "800",});
          // Title Rondas
          p.text(titles_x+60+(rounds-1)*Size_rect/2,titles_y-30, "Rondas").attr({"font-size": "12px","font-weight": "800",});

          shift_player_name_x = titles_x;
          shift_player_name_y = titles_y + 10;
          shift_player_rect_x = shift_player_name_x+Size_rect/2;
          shift_player_rect_y = shift_player_name_y-Size_rect/2;

          n_player = 0
          for(var player in asistencias){

              var text1 = p.text(shift_player_name_x,shift_player_name_y, player); // Adding text player

              var asistencias_player = asistencias[player];
              var asistenciaslength = asistencias_player.length;

              for (var i = 0; i < asistenciaslength; i++) {
                  console.log("Entro")
                  var rect = p.rect(shift_player_rect_x + 30*(i+1),shift_player_rect_y+30*(n_player),30,30);
                  if(asistencias_player[i]==1){ // If in the rond 1 it went
                      rect.attr({fill: "rgb(51,153,255)"});
                  }

              }

              shift_player_name_y = shift_player_name_y +Size_rect;

              n_player = n_player +1;

          }

          p.rect(shift_player_rect_x + 30*(rounds+3),shift_player_rect_y,30,30).attr({fill: "rgb(51,153,255)"});
          p.rect(shift_player_rect_x + 30*(rounds+3),shift_player_rect_y+30,30,30);

          p.text(shift_player_rect_x + 30*(rounds+5),titles_y + 10, "Ir").attr({"font-size": "12px","font-weight": "800",});
          p.text(shift_player_rect_x + 30*(rounds+5),titles_y + 10 +Size_rect, "No ir").attr({"font-size": "12px","font-weight": "800",});


        }
        // ---------------------------------- GRAFICA DE ASISTENCIA -------------------------------------------- //
           window.drawScore = function(msg) {
            // Clear whatever is in there.
            paper1.clear();
            console.log("mensaje puntaje",msg);
            var aux = [0];
            msg = aux.concat(msg);
            paper1.rect(20, 10, 480, 100);

            // Uses only the last 20 rounds to draw the score
            if (msg.length > 20) {
                msg = msg.slice(msg.length - 20, msg.length);
            }

            // Divide rectangle according to data
            var minimo = Math.min.apply(Math,msg);
            var maximo = Math.max.apply(Math,msg);
            var ancho = 480 / (msg.length - 1);
            var alto;
            // String to define path
            var camino = 'M20 ';
            if (minimo < 0) {
                alto = 100 / (maximo - minimo);
                // Add coordinate for (0, 0)
                camino = camino + (maximo * alto + 10) + ' ';
            } else {
                alto = 100 / maximo;
                // Add coordinate for (0, 0)
                camino = camino + '110 ';
            }
            // I need first to construct the inverse path
            // in order to cheat Raphael's path-construction into
            // making a line.
            var camino_inverso = '';

            // Construct string to define paths
            for (var i = 1; i < msg.length; i++) {
                camino = camino + 'L' + (i * ancho + 20) + ' ';
                camino = camino + ((maximo - msg[i]) * alto + 10) + ' ';
                camino_inverso = ((maximo - msg[i]) * alto + 10) + ' ' + camino_inverso;
                camino_inverso = 'L' + (i * ancho + 20) + ' ' + camino_inverso;
            }
            // debugger

            paper1.rect(20, 10, 480, 100);
            paper1.text(-10, 60, 'Puntaje')
                .attr({'text-anchor': 'start', 'font-size': 10})
                .transform('r270');
            //                  paper1.text(240, 120, camino)
            paper1.text(240, 120, 'Rondas (últimas 20)')
                .attr({'text-anchor': 'start', 'font-size': 10});
            paper1.path(camino + ' ' + camino_inverso).attr({stroke: "blue"});

        }; 

        // Draws accumulated score
        node.events.game.on('drawScore', window.drawScore); // end node.on 'DrawScore'
        node.events.game.on('drawAsistencia', window.drawAsistencia)
        //   console.log('Entrando a drawScore', msg);
        // }); // end node.on 'DrawScore'

    } // end onload function
  </script>
